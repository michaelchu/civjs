name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  lint-and-typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install client dependencies
        run: cd apps/client && npm ci

      - name: Install server dependencies
        run: cd apps/server && npm ci
      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Run type checking
        run: npm run typecheck

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ci_test_user
          POSTGRES_PASSWORD: ci_test_password_123
          POSTGRES_DB: civjs_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    env:
      DATABASE_URL: postgresql://ci_test_user:ci_test_password_123@localhost:5432/civjs_test
      REDIS_URL: redis://localhost:6379
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install client dependencies
        run: cd apps/client && npm ci

      - name: Install server dependencies
        run: cd apps/server && npm ci
      - name: Run tests
        run: npm run test -- --ci --coverage --maxWorkers=2

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            apps/client/coverage
            apps/server/coverage