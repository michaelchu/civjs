diff -Nurd tolua-5.2/src/bin/lua/array.lua tolua-5.2/src/bin/lua/array.lua
--- tolua-5.2/src/bin/lua/array.lua	2024-05-31 07:35:56.682991087 +0300
+++ tolua-5.2/src/bin/lua/array.lua	2025-05-01 18:16:05.012460144 +0300
@@ -87,7 +87,7 @@
  output(' tolua_index = (int)tolua_tonumber(tolua_S,2,0)-1;')
 	output('#ifndef TOLUA_RELEASE\n')
  output(' if (tolua_index<0 || tolua_index>='..self.dim..')')
- output('  tolua_error(tolua_S,"array indexing out of range.",NULL);')
+ output('  tolua_error(tolua_S,"array indexing out of range.", nullptr);')
 	output('#endif\n')
 
  -- return value
@@ -144,7 +144,7 @@
   output(' tolua_index = (int)tolua_tonumber(tolua_S,2,0)-1;')
 	 output('#ifndef TOLUA_RELEASE\n')
   output(' if (tolua_index<0 || tolua_index>='..self.dim..')')
-  output('  tolua_error(tolua_S,"array indexing out of range.",NULL);')
+  output('  tolua_error(tolua_S,"array indexing out of range.", nullptr);')
 		output('#endif\n')
 
   -- assign value
@@ -188,7 +188,7 @@
  if self.csetname then
   output(' tolua_array(tolua_S,"'..self.lname..'",'..self.cgetname..','..self.csetname..');')
  else
-  output(' tolua_array(tolua_S,"'..self.lname..'",'..self.cgetname..',NULL);')
+  output(' tolua_array(tolua_S,"'..self.lname..'",'..self.cgetname..', nullptr);')
  end
 end
 
diff -Nurd tolua-5.2/src/bin/lua/class.lua tolua-5.2/src/bin/lua/class.lua
--- tolua-5.2/src/bin/lua/class.lua	2024-05-31 07:35:56.682991087 +0300
+++ tolua-5.2/src/bin/lua/class.lua	2025-05-01 18:11:12.830722336 +0300
@@ -35,10 +35,10 @@
  	output('#ifdef __cplusplus\n')
  	output(' tolua_cclass(tolua_S,"'..self.lname..'","'..self.type..'","'..self.btype..'",'.._collect[self.type]..');')
  	output('#else\n')
- 	output(' tolua_cclass(tolua_S,"'..self.lname..'","'..self.type..'","'..self.btype..'",NULL);')
+ 	output(' tolua_cclass(tolua_S,"'..self.lname..'","'..self.type..'","'..self.btype..'", nullptr);')
  	output('#endif\n')
  else
-	output(' tolua_cclass(tolua_S,"'..self.lname..'","'..self.type..'","'..self.btype..'",NULL);')
+	output(' tolua_cclass(tolua_S,"'..self.lname..'","'..self.type..'","'..self.btype..'", nullptr);')
  end
  output(' tolua_beginmodule(tolua_S,"'..self.lname..'");')
  local i=1
diff -Nurd tolua-5.2/src/bin/lua/declaration.lua tolua-5.2/src/bin/lua/declaration.lua
--- tolua-5.2/src/bin/lua/declaration.lua	2024-05-31 07:35:56.682991087 +0300
+++ tolua-5.2/src/bin/lua/declaration.lua	2025-05-01 18:14:35.951932167 +0300
@@ -307,10 +307,10 @@
      output('   {')
      output('#ifdef __cplusplus\n')
      output('    void* tolua_obj = new',type,'(',self.name,'[i]);')
-					output('    tolua_pushfieldusertype(tolua_S,',narg,',i+1,tolua_clone(tolua_S,tolua_obj,'.. (_collect[type] or 'NULL') ..'),"',type,'");')
+					output('    tolua_pushfieldusertype(tolua_S,',narg,',i+1,tolua_clone(tolua_S,tolua_obj, '.. (_collect[type] or 'nullptr') ..'),"',type,'");')
      output('#else\n')
      output('    void* tolua_obj = tolua_copy(tolua_S,(void*)&',self.name,'[i],sizeof(',type,'));')
-					output('    tolua_pushfieldusertype(tolua_S,',narg,',i+1,tolua_clone(tolua_S,tolua_obj,NULL),"',type,'");')
+					output('    tolua_pushfieldusertype(tolua_S,',narg,',i+1,tolua_clone(tolua_S,tolua_obj, nullptr),"',type,'");')
      output('#endif\n')
      output('   }')
    else
diff -Nurd tolua-5.2/src/bin/lua/function.lua tolua-5.2/src/bin/lua/function.lua
--- tolua-5.2/src/bin/lua/function.lua	2024-05-31 07:35:56.682991087 +0300
+++ tolua-5.2/src/bin/lua/function.lua	2025-05-01 18:15:38.324302059 +0300
@@ -145,7 +145,7 @@
  -- check self
  if class and self.name~='new' and static==nil then
 	 output('#ifndef TOLUA_RELEASE\n')
-  output('  if (!self) tolua_error(tolua_S,"invalid \'self\' in function \''..self.name..'\'",NULL);');
+  output('  if (!self) tolua_error(tolua_S,"invalid \'self\' in function \''..self.name..'\'", nullptr);');
 	 output('#endif\n')
  end
 
@@ -230,10 +230,10 @@
      output('   {')
      output('#ifdef __cplusplus\n')
      output('    void* tolua_obj = new',t,'(tolua_ret);')
-	    output('    tolua_pushusertype(tolua_S,tolua_clone(tolua_S,tolua_obj,'.. (_collect[t] or 'NULL') ..'),"',t,'");')
+	    output('    tolua_pushusertype(tolua_S,tolua_clone(tolua_S,tolua_obj, '.. (_collect[t] or 'nullptr') ..'),"',t,'");')
      output('#else\n')
      output('    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(',t,'));')
-	    output('    tolua_pushusertype(tolua_S,tolua_clone(tolua_S,tolua_obj,NULL),"',t,'");')
+	    output('    tolua_pushusertype(tolua_S,tolua_clone(tolua_S,tolua_obj, nullptr),"',t,'");')
      output('#endif\n')
      output('   }')
     elseif self.ptr == '&' then
diff -Nurd tolua-5.2/src/bin/lua/package.lua tolua-5.2/src/bin/lua/package.lua
--- tolua-5.2/src/bin/lua/package.lua	2024-05-31 07:35:56.682991087 +0300
+++ tolua-5.2/src/bin/lua/package.lua	2025-05-01 18:10:55.666619656 +0300
@@ -156,8 +156,8 @@
  output("{")
  output(" tolua_open(tolua_S);")
  output(" tolua_reg_types(tolua_S);")
- output(" tolua_module(tolua_S,NULL,",self:hasvar(),");")
- output(" tolua_beginmodule(tolua_S,NULL);")
+ output(" tolua_module(tolua_S, nullptr, ",self:hasvar(),");")
+ output(" tolua_beginmodule(tolua_S, nullptr);")
  local i=1
  while self[i] do
   self[i]:register()
diff -Nurd tolua-5.2/src/bin/lua/variable.lua tolua-5.2/src/bin/lua/variable.lua
--- tolua-5.2/src/bin/lua/variable.lua	2024-05-31 07:35:56.682991087 +0300
+++ tolua-5.2/src/bin/lua/variable.lua	2025-05-01 18:17:27.216946438 +0300
@@ -117,7 +117,7 @@
  if class and static==nil then
 	 output('#ifndef TOLUA_RELEASE\n')
 	 output('  if (!self) {\n')
-	 output('    tolua_error(tolua_S,"invalid \'self\' in accessing variable \''..self.name..'\'",NULL);\n')
+	 output('    tolua_error(tolua_S,"invalid \'self\' in accessing variable \''..self.name..'\'", nullptr);\n')
 	 output('    return 0;\n')
 	 output('  }\n')
 		output('#endif\n')
@@ -167,7 +167,7 @@
 		output('  tolua_Error tolua_err;')
   if class and static==nil then
    output('  if (!self) {\n')
-   output('    tolua_error(tolua_S,"invalid \'self\' in accessing variable \''..self.name..'\'",NULL);\n')
+   output('    tolua_error(tolua_S,"invalid \'self\' in accessing variable \''..self.name..'\'", nullptr);\n')
    output('    return 0;\n')
    output('  }\n')
   elseif static then
@@ -239,7 +239,7 @@
  if self.csetname then
   output(' tolua_variable(tolua_S,"'..self.lname..'",'..self.cgetname..','..self.csetname..');')
  else
-  output(' tolua_variable(tolua_S,"'..self.lname..'",'..self.cgetname..',NULL);')
+  output(' tolua_variable(tolua_S,"'..self.lname..'",'..self.cgetname..', nullptr);')
  end
 end
 
